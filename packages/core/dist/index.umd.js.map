{"version":3,"file":"index.umd.js","sources":["../src/utils/imgUtils.js","../src/utils/resize.js","../src/utils/textUtils.js","../src/core/drawPoster.js","../src/core/index.js","../src/index.js"],"sourcesContent":["// 加载图片\nexport function loadImage(src) {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      resolve(img)\n    }\n    img.onerror = () => {\n      reject(`获取${src}失败`)\n    }\n    img.src = src;\n  });\n}\n\n// 获取图片像素\nexport function getImageData(img, rect = [0, 0, img.width, img.height]) {\n  const canvas = document.createElement('canvas')\n  canvas.width = img.width\n  canvas.height = img.height\n  const context = canvas.getContext('2d')\n  context.drawImage(img, 0, 0)\n  return context.getImageData(...rect)\n}","// 将图片处理成固定大小，并添加\nfunction drawImageProp(ctx, img, x = 0, y = 0, w = ctx.canvas.width, h = ctx.canvas.height) {\n  if (offsetX < 0) offsetX = 0\n  if (offsetY < 0) offsetY = 0\n  if (offsetX > 1) offsetX = 1\n  if (offsetY > 1) offsetY = 1\n\n  const iw = img.width\n  const ih = img.height\n  \n  // 将要渲染的内容区域缩放，并使图片居中\n  const r = Math.min(iw / w, ih / h)\n\n  const cw = r * w\n  const ch = r * h\n\n  cx = (iw - cw) * 0.5 // 宽度差的一半作为起始横坐标\n  cy = (ih - ch) * 0.5 // 高度差的一半作为起始纵坐标\n\n  ctx.drawImage(img, cx, cy, cw, ch,  x, y, w, h)\n}\n\nexport default function resizeImage(img, w, h, radius) {\n  return new Promise((resolve, reject) => {\n    const canvas  = document.createElement('canvas')\n    canvas.width = w\n    canvas.height = h\n    const ctx = canvas.getContext('2d')\n\n    // 获取四个角的圆角半径\n    const radiusArr = radius ? radius.split(\" \").map(num => Number(num)): []\n    let topLeftRadius = 0, topRightRadius = 0, bottomRightRadius = 0, bottomLeftRadius = 0\n    if(radiusArr.length === 1) {\n      topLeftRadius = topRightRadius = bottomRightRadius = bottomLeftRadius = radiusArr[0]\n    }\n    if(radiusArr.length === 2) {\n      topLeftRadius = bottomRightRadius = radiusArr[0]\n      topRightRadius = bottomLeftRadius = radiusArr[1]\n    }\n    if(radiusArr.length === 3) {\n      topLeftRadius = radiusArr[0]\n      bottomRightRadius = radiusArr[2]\n      topRightRadius = bottomLeftRadius = radiusArr[1]\n    }\n    if(radiusArr.length === 4) {\n      topLeftRadius = radiusArr[0]\n      topRightRadius = radiusArr[1]\n      bottomRightRadius = radiusArr[2]\n      bottomLeftRadius = radiusArr[3]\n    }\n    \n    // 绘制圆角矩形\n    ctx.beginPath();\n    ctx.moveTo(topLeftRadius, 0)\n    ctx.lineTo(w - topRightRadius, 0)\n    if(topRightRadius) {\n      ctx.arcTo(w, 0, w, topRightRadius, topRightRadius)\n    }\n    ctx.lineTo(w, h - bottomRightRadius)\n    if(bottomRightRadius) {\n      ctx.arcTo(w, h, w - bottomRightRadius, h, bottomRightRadius)\n    }\n    ctx.lineTo(bottomLeftRadius, h)\n    if(bottomLeftRadius) {\n      ctx.arcTo(0, h, 0, h - bottomLeftRadius, bottomLeftRadius)\n    }\n    ctx.lineTo(0, topLeftRadius)\n    if(topLeftRadius) {\n      ctx.arcTo(0, 0, topLeftRadius, 0, topLeftRadius)\n    }\n    ctx.closePath()\n    ctx.clip() // 绘制完裁剪\n\n    if(typeof img === 'string') {\n      ctx.fillStyle = img || '#ffffff'\n      ctx.rect(0, 0, w, h)\n      ctx.fill()\n    } else if(img instanceof Image) {\n      drawImageProp(ctx, img, 0, 0, w, h, 0.5, 0.5)\n    }\n    const imgData = canvas.toDataURL( 'image/png', 1 )\n    resolve(imgData)\n  })\n}\n\n","/**\n * 处理canvas文字绘制\n * @param {string} text - 渲染的文字\n * @param {number} x - canvas的x坐标\n * @param {number} y - canvas的y坐标\n * @param {number} maxWidth - 文字框最大宽度\n * @param {number} lineHeight - 文字行高\n * @param {number} maxLines - 最大行数，超出则省略\n */\n\nexport function contextWrapText() {\n  CanvasRenderingContext2D.prototype.wrapText = function (text, x, y, maxWidth, lineHeight, maxLines) {\n    if (typeof text != 'string' || typeof x != 'number' || typeof y != 'number') {\n        return\n    }\n    \n    let context = this\n    let canvas = context.canvas\n    \n    if (typeof maxWidth == 'undefined') {\n        maxWidth = (canvas && canvas.width) || 300\n    }\n    if (typeof lineHeight == 'undefined') {\n        lineHeight = (canvas && parseInt(window.getComputedStyle(canvas).lineHeight)) || parseInt(window.getComputedStyle(document.body).lineHeight)\n    }\n    \n    // 字符分隔为数组\n    let arrText = Array.from(text)\n    \n    let line = '', lineNumber = 0\n    \n    for (let n = 0; n < arrText.length; n++) {\n      let testLine = line + arrText[n]\n      let metrics = context.measureText(testLine)\n      let testWidth = metrics.width\n      // 检查拼接的line字符串是否超出了最大长度，超出则渲染出来，然后继续下一行\n      if (testWidth > maxWidth && n > 0) {\n        lineNumber ++\n        // 如果行数超过了限制行数，则终止下面的渲染，然后在最后拼接...\n        if(lineNumber >= maxLines && maxLines) {\n          context.fillText(line.substring(0, line.length - 1) + '...', x, y)\n          line = ''\n          break\n        } else {\n          context.fillText(line, x, y)\n          line = arrText[n]\n          y += lineHeight\n        }\n      } else {\n          line = testLine\n      }\n    }\n    context.fillText(line, x, y)\n    return {\n      lineNumber\n    }\n  }\n}","/**\n * drawPoster 类\n */\n\nimport { loadImage, getImageData } from '../utils/imgUtils'\nimport resizeImage from '../utils/resize'\nimport { contextWrapText } from '../utils/textUtils'\n\nclass DrawPoster {\n  constructor(ctx, options = {}) {\n    if(!ctx) {\n      throw new Error('Canvas context is required!')\n    }\n    const { ratio } = options\n    this.ratio = ratio\n    this.ctx = ctx\n\n    // 引入文字处理函数，挂在context下面\n    contextWrapText()\n  }\n}\n\n/**\n * 加载图片并返回Image对象\n * @param {String} src - 图片路径\n */\nDrawPoster.prototype.loadImage = async function(src) {\n  if(!src || typeof src !== 'string') {\n    throw new Error('Image url is required and must be a string!')\n    return \n  }\n  const img = await loadImage(src)\n  return img\n}\n\n/**\n * 获取图片像素\n * @param {Image} img - 图片\n * @param {Array} rect - 像素获取范围\n */\nDrawPoster.prototype.getImageData = async function(img, rect = [0, 0, img.width, img.height]) {\n  if(!img) {\n    throw new Error('Image is required!')\n    return \n  }\n  if(!(img instanceof Image)) {\n    throw new Error('Image type error!')\n    return \n  }\n  return getImageData(img, rect)\n}\n\n/**\n * 裁剪图片\n * @param {Image} img - 图片\n * @param {Number} w - 新图片宽度\n * @param {Number} h - 新图片高度\n * @param {String} radius - 新图片圆角\n */\nDrawPoster.prototype.resizeImage = async function(img, w, h, radius) {\n  if(!img) {\n    throw new Error('Image is required!')\n    return \n  }\n\n  w = w * this.ratio\n  h = h * this.ratio\n  radius = radius.split(\" \").map(num => Number(num) * this.ratio).join(\" \")\n\n  const imgData = await resizeImage(img, w, h, radius)\n  return imgData\n}\n\n/**\n * 渲染文字\n * @param {string} text - 渲染的文字\n * @param {number} x - canvas的x坐标\n * @param {number} y - canvas的y坐标\n * @param {number} maxWidth - 文字框最大宽度\n * @param {number} lineHeight - 文字行高\n * @param {number} maxLines - 最大行数，超出则省略\n */\nDrawPoster.prototype.wrapText = function(text, x, y, maxWidth, lineHeight, maxLines) {\n  const { lineNumber } = this.ctx.wrapText(text, x, y, maxWidth, lineHeight, maxLines)\n  // 返回文字渲染的行数\n  return { lineNumber }\n}\n\nexport default DrawPoster","import DrawPoster from './drawPoster'\n\n/**\n * 实例化DrawPoster类并返回\n * @param {Object} ctx  - canvas context\n * @param {Number} ratio - 海报像素缩放比例\n */\nexport const createDrawPoster = (ctx, { ratio = 1 }) => {\n  const drawPoster = new DrawPoster(ctx, { ratio })\n  return drawPoster\n}","import { createDrawPoster } from './core'\n\n/**\n * 获取drawPoster对象\n * @param {Object} ctx  - canvas context\n * @param {Number} ratio - 海报像素缩放比例\n */\nexport default function(ctx, options = {}) {\n  const drawPoster = createDrawPoster(ctx, options)\n  return drawPoster\n}"],"names":[],"mappings":"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"}